@use './colors.scss' as colors;
@use './fonts.scss' as font;

$grid-gutter-widths: (
    default: 0,
    xs: 1rem,
    sm: 1.5rem,
    md: 2rem,
    lg: 2.5rem,
    xl: 3rem,
);

@function gutter($breakpoint) {
    @return map-get($grid-gutter-widths, $breakpoint);
}

@mixin flex-container (
    $direction: column,
    $wrap: wrap,
    $justify: center,
    $align: center,

) {
    align-items: $align;
    display: flex;
    flex-direction: $direction;
    flex-wrap: $wrap;
    justify-content: $justify;

}

$margin: (
    default: 0,
    xs: 1rem,
    auto: auto,
    md: 2rem,
    lg: 3rem,
);

@mixin margin($size: xs, $sides: all) {
    @if $sides == all {
        margin: map-get($margin, $size);
    } @else if $sides == 'x' {
        margin-left: map-get($margin, $size);
        margin-right: map-get($margin, $size);
    } @else if $sides == 'y' {
        margin-top: map-get($margin, $size);
        margin-bottom: map-get($margin, $size);
    } @else {
    @each $side in $sides {
        @if $side == top {
            margin-top: map-get($margin, $size);
            } @else if $side == right {
                margin-right: map-get($margin, $size);
            } @else if $side == bottom {
                margin-bottom: map-get($margin, $size);
            } @else if $side == left {
                margin-left: map-get($margin, $size);
            } @else {
            @warn "Invalid margin side: #{$side}";
            }
        }
    }
}

$gap-sizes: (
    default: 0,
    xs: 0.5rem,
    sm: 1rem,
    md: 2rem,
);

@mixin gap($size: sm) {
    gap: map-get($gap-sizes, $size);
}